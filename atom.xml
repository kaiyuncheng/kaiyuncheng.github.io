<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Notes by kaiyuncheng</title>
  <icon>https://kaiyuncheng.github.io/icon.png</icon>
  <subtitle>On the way of learning and coding</subtitle>
  <link href="https://kaiyuncheng.github.io/atom.xml" rel="self"/>
  
  <link href="https://kaiyuncheng.github.io/"/>
  <updated>2024-01-11T00:53:49.618Z</updated>
  <id>https://kaiyuncheng.github.io/</id>
  
  <author>
    <name>KaiYun Cheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Websocket / Socket.IO</title>
    <link href="https://kaiyuncheng.github.io/2024/01/07/websocket/"/>
    <id>https://kaiyuncheng.github.io/2024/01/07/websocket/</id>
    <published>2024-01-07T14:05:12.000Z</published>
    <updated>2024-01-11T00:53:49.618Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Websocket&quot;&gt;&lt;a href=&quot;#Websocket&quot; class=&quot;headerlink&quot; title=&quot;Websocket&quot;&gt;&lt;/a&gt;Websocket&lt;/h2&gt;&lt;p&gt;Websocket是Html5的一種網路協定，用於前端瀏覽器(Client)與後端(Server)的溝通，協定只需要連線一次，除非有一方斷開連接，否則就會一直存在，不需重複請求，常用實作於聊天室、訊息推播、共同編輯上。&lt;/p&gt;</summary>
    
    
    
    <category term="Websocket" scheme="https://kaiyuncheng.github.io/categories/Websocket/"/>
    
    
    <category term="websocket" scheme="https://kaiyuncheng.github.io/tags/websocket/"/>
    
    <category term="socket.IO" scheme="https://kaiyuncheng.github.io/tags/socket-IO/"/>
    
  </entry>
  
  <entry>
    <title>Typescript Note 2 - OOP / class / interface</title>
    <link href="https://kaiyuncheng.github.io/2024/01/03/Typescript_02/"/>
    <id>https://kaiyuncheng.github.io/2024/01/03/Typescript_02/</id>
    <published>2024-01-03T14:05:12.000Z</published>
    <updated>2024-04-13T22:34:02.478Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;物件導向-OOP-class-設計圖&quot;&gt;&lt;a href=&quot;#物件導向-OOP-class-設計圖&quot; class=&quot;headerlink&quot; title=&quot;物件導向 OOP / class 設計圖&quot;&gt;&lt;/a&gt;物件導向 OOP / class 設計圖&lt;/h2&gt;&lt;p&gt;在物件導向的架構中，每個物件都具有接收訊息，處理資料以及發送訊息給其他物件的能力。&lt;/p&gt;
&lt;p&gt;一個簡易的會員資料集&lt;/p&gt;
&lt;h4 id=&quot;屬性：&quot;&gt;&lt;a href=&quot;#屬性：&quot; class=&quot;headerlink&quot; title=&quot;屬性：&quot;&gt;&lt;/a&gt;屬性：&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;age &lt;/li&gt;
&lt;li&gt;address&lt;h4 id=&quot;功能：&quot;&gt;&lt;a href=&quot;#功能：&quot; class=&quot;headerlink&quot; title=&quot;功能：&quot;&gt;&lt;/a&gt;功能：&lt;/h4&gt;&lt;/li&gt;
&lt;li&gt;新增資料&lt;/li&gt;
&lt;li&gt;更新資料&lt;/li&gt;
&lt;li&gt;刪除資料&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Typescript" scheme="https://kaiyuncheng.github.io/categories/Typescript/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Typescript" scheme="https://kaiyuncheng.github.io/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>Typescript Note - 安裝 / 型別 / 用法</title>
    <link href="https://kaiyuncheng.github.io/2024/01/02/Typescript_01/"/>
    <id>https://kaiyuncheng.github.io/2024/01/02/Typescript_01/</id>
    <published>2024-01-02T17:45:17.000Z</published>
    <updated>2024-04-13T22:34:03.074Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Typescript-編譯安裝指令&quot;&gt;&lt;a href=&quot;#Typescript-編譯安裝指令&quot; class=&quot;headerlink&quot; title=&quot;Typescript 編譯安裝指令&quot;&gt;&lt;/a&gt;Typescript 編譯安裝指令&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;全域安裝Typescript&lt;code&gt;npm install -g typescript&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;專案資料夾 初始化 &lt;code&gt;tsc --init&lt;/code&gt; 生成 tsconfig.json 配置檔&lt;/li&gt;
&lt;li&gt;Typescript compiler &lt;code&gt;tsc hello.ts&lt;/code&gt; tsc 檔案名稱&lt;/li&gt;
&lt;li&gt;live watch &lt;code&gt;tsc --watch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看Typescript版本 &lt;code&gt;tsc -v&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Typescript" scheme="https://kaiyuncheng.github.io/categories/Typescript/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Typescript" scheme="https://kaiyuncheng.github.io/tags/Typescript/"/>
    
  </entry>
  
  <entry>
    <title>[React] 一些比較容易忘記的筆記</title>
    <link href="https://kaiyuncheng.github.io/2023/12/20/react_01/"/>
    <id>https://kaiyuncheng.github.io/2023/12/20/react_01/</id>
    <published>2023-12-20T23:10:11.000Z</published>
    <updated>2024-01-27T00:00:11.800Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;class-typescript-用法&quot;&gt;&lt;a href=&quot;#class-typescript-用法&quot; class=&quot;headerlink&quot; title=&quot;class + typescript 用法&quot;&gt;&lt;/a&gt;class + typescript 用法&lt;/h2&gt;&lt;p&gt;現在大多的React新專案都改成用hooks了，但還是有一些老舊專案會遇到，這邊會來記錄一下用法。&lt;/p&gt;</summary>
    
    
    
    <category term="React" scheme="https://kaiyuncheng.github.io/categories/React/"/>
    
    
    <category term="frontend" scheme="https://kaiyuncheng.github.io/tags/frontend/"/>
    
    <category term="react" scheme="https://kaiyuncheng.github.io/tags/react/"/>
    
    <category term="typescript" scheme="https://kaiyuncheng.github.io/tags/typescript/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day15 動態規劃 Dynamic programming - Closure / Fibonacci numbers</title>
    <link href="https://kaiyuncheng.github.io/2023/10/10/leetcodeDay15/"/>
    <id>https://kaiyuncheng.github.io/2023/10/10/leetcodeDay15/</id>
    <published>2023-10-10T07:56:41.000Z</published>
    <updated>2024-04-15T02:36:35.541Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;動態規劃-Dynamic-programming&quot;&gt;&lt;a href=&quot;#動態規劃-Dynamic-programming&quot; class=&quot;headerlink&quot; title=&quot;動態規劃 Dynamic programming&quot;&gt;&lt;/a&gt;動態規劃 Dynamic programming&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;using ‘Cache’ Memoization&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;動態規劃的基本思想是將「原始問題」分解成多個「子問題」，先求解並「儲存」這些子問題的解到 cache，然後通過這些子問題的解來提供給原問題。這樣做的目的是避免重複計算，從而提高算法的效率。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dynamic Programming = Divide-and-Conquer + Memoization (Cache)&lt;br&gt;與 分而治之 Divide-and-Conquer 很像，但最大的差別是子問題大多類似，並先儲存子問題的解到 cache，之後需要使用到時就不用重複計算&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Dynamic programming" scheme="https://kaiyuncheng.github.io/tags/Dynamic-programming/"/>
    
    <category term="Fibonacci numbers" scheme="https://kaiyuncheng.github.io/tags/Fibonacci-numbers/"/>
    
    <category term="Closure" scheme="https://kaiyuncheng.github.io/tags/Closure/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day10 Algorithm - Searching / Traversal</title>
    <link href="https://kaiyuncheng.github.io/2023/10/09/leetcodeDay14/"/>
    <id>https://kaiyuncheng.github.io/2023/10/09/leetcodeDay14/</id>
    <published>2023-10-10T01:01:21.000Z</published>
    <updated>2024-04-14T23:00:26.164Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Searching-Traversal&quot;&gt;&lt;a href=&quot;#Searching-Traversal&quot; class=&quot;headerlink&quot; title=&quot;Searching / Traversal&quot;&gt;&lt;/a&gt;Searching / Traversal&lt;/h2&gt;&lt;p&gt;Search&lt;br&gt;簡易搜尋/線性搜索 Sequential Search/Linear Search - O(n)&lt;br&gt;二分搜尋 Binary Search - O(log n) &lt;/p&gt;
&lt;p&gt;Traversal&lt;br&gt;Depth First Search (DFS)   先 上到下 再 左到右 - O(n)&lt;br&gt;Breadth First Search (BFS) 先 左到右 再 上到下  - O(n)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DFS use lower memories than BFS&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Searching" scheme="https://kaiyuncheng.github.io/tags/Searching/"/>
    
    <category term="Traversal" scheme="https://kaiyuncheng.github.io/tags/Traversal/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day12 Algorithm - Sorting 排序</title>
    <link href="https://kaiyuncheng.github.io/2023/10/08/leetcodeDay13/"/>
    <id>https://kaiyuncheng.github.io/2023/10/08/leetcodeDay13/</id>
    <published>2023-10-08T14:31:16.000Z</published>
    <updated>2024-04-14T23:27:08.176Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Sorting-排序&quot;&gt;&lt;a href=&quot;#Sorting-排序&quot; class=&quot;headerlink&quot; title=&quot;Sorting 排序&quot;&gt;&lt;/a&gt;Sorting 排序&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;排序 Sorting:&lt;br&gt;Comparison Sort&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;氣泡排序 Bubble Sort - Time O(n) or O(n^2) / Space - O(1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;選擇排序 Selection Sort - Time O(n^2) /  Space - O(1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;插入排序 Insertion Sort - Time O(n) or O(n^2) / Space - O(1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;合併排序 Merge Sort - Time O(n log n) / Space - O(n)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;快速排序 Quick Sort - Time O(n log n) / Space - O(log n)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;合併排序 Merge Sort 和 快速排序 Quick Sort 用 Divide and Conquer Recursion 方式 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Heap Sort &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Non-Comparison Sort&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Counting Sort&lt;/li&gt;
&lt;li&gt;Radix Sort&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Sorting" scheme="https://kaiyuncheng.github.io/tags/Sorting/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day12 Algorithm - Recursion 遞迴 - Factorial / Fibonacci numbers</title>
    <link href="https://kaiyuncheng.github.io/2023/10/07/leetcodeDay12/"/>
    <id>https://kaiyuncheng.github.io/2023/10/07/leetcodeDay12/</id>
    <published>2023-10-07T20:30:13.000Z</published>
    <updated>2024-04-13T23:10:54.770Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Recursion-遞迴&quot;&gt;&lt;a href=&quot;#Recursion-遞迴&quot; class=&quot;headerlink&quot; title=&quot;Recursion 遞迴&quot;&gt;&lt;/a&gt;Recursion 遞迴&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在函式之中呼叫函式自己本身&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Recursion" scheme="https://kaiyuncheng.github.io/tags/Recursion/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day11 Data Structures - Graph</title>
    <link href="https://kaiyuncheng.github.io/2023/10/06/leetcodeDay11/"/>
    <id>https://kaiyuncheng.github.io/2023/10/06/leetcodeDay11/</id>
    <published>2023-10-06T17:00:12.000Z</published>
    <updated>2024-04-13T22:42:45.793Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Graph&quot;&gt;&lt;a href=&quot;#Graph&quot; class=&quot;headerlink&quot; title=&quot;Graph&quot;&gt;&lt;/a&gt;Graph&lt;/h2&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Graph" scheme="https://kaiyuncheng.github.io/tags/Graph/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day10 Data Structures - Tree</title>
    <link href="https://kaiyuncheng.github.io/2023/10/05/leetcodeDay10/"/>
    <id>https://kaiyuncheng.github.io/2023/10/05/leetcodeDay10/</id>
    <published>2023-10-05T15:01:22.000Z</published>
    <updated>2024-04-13T22:42:45.827Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Tree&quot;&gt;&lt;a href=&quot;#Tree&quot; class=&quot;headerlink&quot; title=&quot;Tree&quot;&gt;&lt;/a&gt;Tree&lt;/h2&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Tree" scheme="https://kaiyuncheng.github.io/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day9 Data Structures - Queue</title>
    <link href="https://kaiyuncheng.github.io/2023/10/04/leetcodeDay9/"/>
    <id>https://kaiyuncheng.github.io/2023/10/04/leetcodeDay9/</id>
    <published>2023-10-04T18:50:33.000Z</published>
    <updated>2024-04-13T22:42:45.827Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Queue&quot;&gt;&lt;a href=&quot;#Queue&quot; class=&quot;headerlink&quot; title=&quot;Queue&quot;&gt;&lt;/a&gt;Queue&lt;/h2&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Queue" scheme="https://kaiyuncheng.github.io/tags/Queue/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day8 Data Structures - Stack</title>
    <link href="https://kaiyuncheng.github.io/2023/10/03/leetcodeDay8/"/>
    <id>https://kaiyuncheng.github.io/2023/10/03/leetcodeDay8/</id>
    <published>2023-10-03T23:20:31.000Z</published>
    <updated>2024-04-13T22:42:45.828Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Stack&quot;&gt;&lt;a href=&quot;#Stack&quot; class=&quot;headerlink&quot; title=&quot;Stack&quot;&gt;&lt;/a&gt;Stack&lt;/h2&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Stack" scheme="https://kaiyuncheng.github.io/tags/Stack/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day7 Data Structures - Linked-list 鏈結串列</title>
    <link href="https://kaiyuncheng.github.io/2023/10/02/leetcodeDay7/"/>
    <id>https://kaiyuncheng.github.io/2023/10/02/leetcodeDay7/</id>
    <published>2023-10-02T16:56:41.000Z</published>
    <updated>2024-04-14T20:14:17.114Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Linked-list-鏈結串列&quot;&gt;&lt;a href=&quot;#Linked-list-鏈結串列&quot; class=&quot;headerlink&quot; title=&quot;Linked-list 鏈結串列&quot;&gt;&lt;/a&gt;Linked-list 鏈結串列&lt;/h2&gt;&lt;p&gt;鏈結串列是一種常見的基礎資料結構，是一種線性序列，但是並不會按線性的順序儲存資料，而是在每一個節點裡存到下一個節點的指標。&lt;br&gt;生活例子類似火車，節點Node，像是車廂&lt;/p&gt;
&lt;p&gt;由於不必須按順序儲存，鏈結串列在插入的時候可以達到O(1)的複雜度，但是尋找一個節點或者存取特定編號的節點則需要O(n)的時間&lt;/p&gt;
&lt;h3 id=&quot;Operations-on-Linked-list&quot;&gt;&lt;a href=&quot;#Operations-on-Linked-list&quot; class=&quot;headerlink&quot; title=&quot;Operations on Linked-list&quot;&gt;&lt;/a&gt;Operations on Linked-list&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Insert - O(n)  Append - O(1) Prepend - O(1)&lt;/li&gt;
&lt;li&gt;Access Lookup- O(n) &lt;/li&gt;
&lt;li&gt;Search - &lt;/li&gt;
&lt;li&gt;Delete - O(n) &lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Linked-list" scheme="https://kaiyuncheng.github.io/tags/Linked-list/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Data Structures - Hash Table - Day6 Map</title>
    <link href="https://kaiyuncheng.github.io/2023/10/01/leetcodeDay6/"/>
    <id>https://kaiyuncheng.github.io/2023/10/01/leetcodeDay6/</id>
    <published>2023-10-01T14:56:41.000Z</published>
    <updated>2024-04-13T22:42:45.829Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Map&quot;&gt;&lt;a href=&quot;#Map&quot; class=&quot;headerlink&quot; title=&quot;Map&quot;&gt;&lt;/a&gt;Map&lt;/h2&gt;&lt;p&gt;The Map object holds key-value pairs and remembers the original insertion order of the keys. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;MDN MAP&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;elements in an array do not repeat -&amp;gt; use &lt;code&gt;Set&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;elements in an object do not repeat -&amp;gt; use &lt;code&gt;Map&lt;/code&gt;&lt;br&gt;both have size, has(), and keys().&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;與Object有點類似，但Map裡面的key是唯一的，重複set會覆蓋舊的value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Map的key除了原始型別外，可以是任何值object或function&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Map" scheme="https://kaiyuncheng.github.io/tags/Map/"/>
    
    <category term="HashTable" scheme="https://kaiyuncheng.github.io/tags/HashTable/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Data Structures - Day5 Hash Table - 集合 Set</title>
    <link href="https://kaiyuncheng.github.io/2023/10/01/leetcodeDay5/"/>
    <id>https://kaiyuncheng.github.io/2023/10/01/leetcodeDay5/</id>
    <published>2023-10-01T07:56:41.000Z</published>
    <updated>2024-04-13T22:42:45.828Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Hash-Tables&quot;&gt;&lt;a href=&quot;#Hash-Tables&quot; class=&quot;headerlink&quot; title=&quot;Hash Tables&quot;&gt;&lt;/a&gt;Hash Tables&lt;/h2&gt;&lt;p&gt;in javascript &lt;code&gt;object&lt;/code&gt; could be represented Hash Tables.&lt;/p&gt;
&lt;p&gt;Hash Collision -&amp;gt; 是指不同的輸入經過 Hash 函數計算後，得到了相同的輸出值。相同hash編號內的資料，會透過Linked List的方式串接在一起。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hash Table 常用在儲存使用者的 Email、使用者資料。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Operations-on-Hash-Tables&quot;&gt;&lt;a href=&quot;#Operations-on-Hash-Tables&quot; class=&quot;headerlink&quot; title=&quot;Operations on Hash Tables&quot;&gt;&lt;/a&gt;Operations on Hash Tables&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;Insert - O(1) &lt;/li&gt;
&lt;li&gt;Access Lookup- O(1) &lt;/li&gt;
&lt;li&gt;Search - O(1) &lt;/li&gt;
&lt;li&gt;Delete - O(1) &lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;集合-Set&quot;&gt;&lt;a href=&quot;#集合-Set&quot; class=&quot;headerlink&quot; title=&quot;集合 Set&quot;&gt;&lt;/a&gt;集合 Set&lt;/h2&gt;&lt;p&gt;The Set object lets you store unique values of any type, whether primitive values or object references.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;elements in an array do not repeat -&amp;gt; use &lt;code&gt;Set&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;elements in an object do not repeat -&amp;gt; use &lt;code&gt;Map&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;both have size, has(), and keys().&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Set" scheme="https://kaiyuncheng.github.io/tags/Set/"/>
    
    <category term="HashTable" scheme="https://kaiyuncheng.github.io/tags/HashTable/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day4 Data Structures - 陣列 Array - Leetcode #905, #561</title>
    <link href="https://kaiyuncheng.github.io/2023/09/29/leetcodeDay4/"/>
    <id>https://kaiyuncheng.github.io/2023/09/29/leetcodeDay4/</id>
    <published>2023-09-29T08:55:00.000Z</published>
    <updated>2024-04-14T21:58:34.578Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Leetcode-陣列題型&quot;&gt;&lt;a href=&quot;#Leetcode-陣列題型&quot; class=&quot;headerlink&quot; title=&quot;Leetcode 陣列題型&quot;&gt;&lt;/a&gt;Leetcode 陣列題型&lt;/h2&gt;&lt;p&gt;這篇會跟著 Hannah 的鐵人賽刷的題目，會慢慢再更新其他題目。&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Array" scheme="https://kaiyuncheng.github.io/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day3 Data Structures - Array 陣列 - 簡易搜索、二分搜索、leetcode #1064</title>
    <link href="https://kaiyuncheng.github.io/2023/09/27/leetcodeDay3/"/>
    <id>https://kaiyuncheng.github.io/2023/09/27/leetcodeDay3/</id>
    <published>2023-09-28T00:52:33.000Z</published>
    <updated>2024-04-14T22:54:21.185Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;陣列&quot;&gt;&lt;a href=&quot;#陣列&quot; class=&quot;headerlink&quot; title=&quot;陣列&quot;&gt;&lt;/a&gt;陣列&lt;/h2&gt;&lt;p&gt;陣列應該是資料結構中對於寫javascript的人來說最友好的，js的陣列可以放入不同型別的資料(像是C/Java這樣的語言，陣列的大小和資料型別要先定義)，加上js有許多陣列方法，雖然蠻多是O(n^2)以上，但相對的寫法算很簡潔…&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="Array" scheme="https://kaiyuncheng.github.io/tags/Array/"/>
    
    <category term="Binary Search" scheme="https://kaiyuncheng.github.io/tags/Binary-Search/"/>
    
    <category term="Sequential Search" scheme="https://kaiyuncheng.github.io/tags/Sequential-Search/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day2 學習目錄和原始型別</title>
    <link href="https://kaiyuncheng.github.io/2023/09/27/leetcodeDay2/"/>
    <id>https://kaiyuncheng.github.io/2023/09/27/leetcodeDay2/</id>
    <published>2023-09-27T06:08:41.000Z</published>
    <updated>2024-04-14T20:49:36.648Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;學習目錄&quot;&gt;&lt;a href=&quot;#學習目錄&quot; class=&quot;headerlink&quot; title=&quot;學習目錄&quot;&gt;&lt;/a&gt;學習目錄&lt;/h2&gt;&lt;p&gt;我的學習順序大致會分Data Structure和Algorithms兩個大項&lt;br&gt;另外搭配leetcode的題目。&lt;/p&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Data Structures" scheme="https://kaiyuncheng.github.io/tags/Data-Structures/"/>
    
    <category term="catalogue" scheme="https://kaiyuncheng.github.io/tags/catalogue/"/>
    
  </entry>
  
  <entry>
    <title>[用JS來寫演算法和了解資料結構] Day1 演算法的好壞評量標準 Big O</title>
    <link href="https://kaiyuncheng.github.io/2023/09/25/leetcodeDay1/"/>
    <id>https://kaiyuncheng.github.io/2023/09/25/leetcodeDay1/</id>
    <published>2023-09-25T05:49:35.000Z</published>
    <updated>2024-04-13T22:42:45.828Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;這個系列主要是想自我挑戰30天用學資料結構和演算法。因為不是資訊本科生，對資料結構的理論一知半解，藉由筆記更加深印象。會搭配一個我很喜歡的前端工程師Hannah分享的鐵人賽文章，來做練習。這邊因為是我個人練習學習，順序或時間可能會跟Hannah的文章不一樣。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ithelp.ithome.com.tw/articles/10213184&quot;&gt;前端工程師用 javaScript 學演算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://adrianmejia.com/categories/coding/data-structures-and-algorithms-dsa/&quot;&gt;Data Structures and Algorithms (DSA)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/categories/Algorithm/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="Leetcode" scheme="https://kaiyuncheng.github.io/tags/Leetcode/"/>
    
    <category term="Algorithm" scheme="https://kaiyuncheng.github.io/tags/Algorithm/"/>
    
    <category term="Time Complexity" scheme="https://kaiyuncheng.github.io/tags/Time-Complexity/"/>
    
    <category term="Big O" scheme="https://kaiyuncheng.github.io/tags/Big-O/"/>
    
  </entry>
  
  <entry>
    <title>JSDoc - 產生API說明文件</title>
    <link href="https://kaiyuncheng.github.io/2022/11/12/JSDoc/"/>
    <id>https://kaiyuncheng.github.io/2022/11/12/JSDoc/</id>
    <published>2022-11-12T17:35:17.000Z</published>
    <updated>2024-04-13T22:34:03.053Z</updated>
    
    
    <summary type="html">&lt;p&gt;JSDoc&lt;br&gt;&lt;a href=&quot;https://jsdoc.app/&quot;&gt;https://jsdoc.app/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;用法&quot;&gt;&lt;a href=&quot;#用法&quot; class=&quot;headerlink&quot; title=&quot;用法&quot;&gt;&lt;/a&gt;用法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;註解(comment) /**  */&lt;/li&gt;
&lt;li&gt;標記(tags) @&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;型別註釋(type notation)&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** Repeat &amp;lt;b&amp;gt;AAA&amp;lt;/b&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@namespace&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/categories/Javascript/"/>
    
    
    <category term="Javascript" scheme="https://kaiyuncheng.github.io/tags/Javascript/"/>
    
    <category term="jsdoc" scheme="https://kaiyuncheng.github.io/tags/jsdoc/"/>
    
    <category term="api" scheme="https://kaiyuncheng.github.io/tags/api/"/>
    
  </entry>
  
</feed>
